version: '3.8'

services:
  # Postgres database
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-mlflow_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mlflow_password}
      POSTGRES_DB: ${POSTGRES_DB:-mlflow_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql

  # MinIO for storing artifacts
  minio:
    restart: always
    image: quay.io/minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_ACCESS_KEY}
      MINIO_STORAGE_USE_HTTPS: "false"
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  # MinIO setup to initialize bucket
  minio-setup:
    image: quay.io/minio/mc
    depends_on:
      - minio
    volumes:
      - ./minio/create-bucket.sh:/create-bucket.sh
    entrypoint: /bin/sh
    command: -c "chmod +x /create-bucket.sh && /create-bucket.sh"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_ACCESS_KEY}

  # MLflow server with MinIO and PostgreSQL
  mlflow:
    build:
      context: ./mlflow  # Chemin vers le dossier contenant le Dockerfile de mlflow
      dockerfile: Dockerfile  # Nom du Dockerfile dans ce dossier
    container_name: mlflow_server
    restart: always
    environment:
      POSTGRES_USER: mlflow_user
      POSTGRES_PASSWORD: mlflow_password
      POSTGRES_DB: mlflow_db
      BACKEND_STORE_URI: postgresql://mlflow_user:mlflow_password@postgres/mlflow_db
      ARTIFACT_ROOT: s3://mlflow
      AWS_ACCESS_KEY_ID: ${MINIO_ACCESS_KEY}
      AWS_SECRET_ACCESS_KEY: ${MINIO_SECRET_ACCESS_KEY}
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      MLFLOW_S3_IGNORE_TLS: "true"
    ports:
      - "5001:5000"
    depends_on:
      - postgres
      - minio
    command: >
      /bin/bash -c "
      pip install psycopg2-binary &&
      mlflow server
      --host 0.0.0.0
      --backend-store-uri postgresql://${POSTGRES_USER:-mlflow_user}:${POSTGRES_PASSWORD:-mlflow_password}@postgres/${POSTGRES_DB:-mlflow_db}
      --serve-artifacts
      --artifacts-destination s3://mlflow
      "
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=punkrock
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
  # API service using FastAPI
  api:
    build:
      context: .
      dockerfile: ./fastapi/Dockerfile
    container_name: fastapi_app
    volumes:
      - ./mlruns:/app/mlruns
      - ./data:/app/data
      - ./data/uploaded_files:/data/uploaded_files
    environment:
      MLFLOW_TRACKING_URI: http://mlflow_server:5000
    ports:
      - "8000:8000"
    depends_on:
      - mlflow
      - postgres



volumes:
  postgres_data:
  minio_data:
